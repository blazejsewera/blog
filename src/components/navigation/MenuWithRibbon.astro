---
import { cx } from '../util/classes'
import {
  blogSiteRoot,
  baseSiteRoot,
  githubOfficial,
  siteName,
} from '../../components/const/meta'
import Icon from '../atom/Icon.astro'

export interface Props {
  ribbonTitle: string
}
const { ribbonTitle } = Astro.props
---

<div class="header-image flex mb-12">
  <span class="brand my-auto text-2xl">
    <a href={blogSiteRoot} title={siteName} class="text-white weight-normal"
      >{siteName}</a
    >
  </span>
  <span
    id="menu-image-button"
    class="flex ml-auto my-auto icon-wrapper cursor-pointer"
  >
    <img src="/menu.svg" alt="menu" />
  </span>
</div>

<div id="ribbon" class={cx('bg-neutral-700', 'text-white')}>
  <div id="menu-ribbon-button" class="flex cursor-pointer">
    <img src="/menu.svg" alt="menu" />
  </div>
  <span>{ribbonTitle}</span>
  <div>
    <a class="flex" href={blogSiteRoot}
      ><img class="logo" src="/logo-white.svg" alt="home" />
    </a>
  </div>
</div>

<div
  id="menu"
  class={cx(
    'flex',
    'fixed',
    'top-0',
    'h-screen',
    'p-12',
    'bg-neutral-700',
    'text-white',
  )}
>
  <span
    id="menu-close-button"
    class={cx(
      'flex',
      'absolute',
      'top-8',
      'right-8',
      'md:top-12',
      'md:left-12',
      'icon-wrapper',
      'cursor-pointer',
    )}
  >
    <img src="/close.svg" alt="close" />
  </span>
  <div class="my-auto">
    <h2
      class={cx(
        'font-geometric',
        'text-2xl',
        'md:text-3xl',
        'xl:text-4xl',
        'my-6',
      )}
    >
      Where do you want to go?
    </h2>
    <menu class={cx('list-none', 'text-xl', 'md:text-2xl')}>
      <li><a class={cx('block', 'mb-4')} href={baseSiteRoot}>home</a></li>
      <li>
        <a class={cx('block', 'mb-4')} href={blogSiteRoot} title="Blog">blog</a>
      </li>
      <li>
        <a
          class={cx('block', 'mb-4')}
          href={`${baseSiteRoot}#me`}
          title="About me">about me</a
        >
      </li>
      <li>
        <a class={cx('block', 'mb-4')} href={githubOfficial} title="My Github"
          >github<Icon
            cl={cx('inline-block', 'align-super', 'ml-0.5')}
            size="1rem"
            icon="external-link"
          />
        </a>
      </li>
    </menu>
  </div>
</div>

<style is:global>
  #ribbon {
    position: fixed;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    right: -50px;
    top: 80px;
    box-sizing: border-box;
    width: 50px;
    min-height: 360px;
    padding: 15px 5px;
    font-size: 16px;
    z-index: 68;
    transition-property: right;
    transition-duration: 200ms;
  }
  #ribbon.visible {
    right: 0;
  }
  #ribbon #menu-ribbon-button img {
    height: 24px;
    margin: auto;
  }
  #ribbon .logo {
    height: 30px;
    margin: auto;
  }
  #ribbon span {
    writing-mode: vertical-rl;
    text-orientation: mixed;
  }
  #ribbon > div,
  #ribbon > span {
    margin: 0 auto;
  }

  @media (max-width: 767px) {
    #ribbon {
      top: -45px;
      right: 0;
      width: 100%;
      min-height: 45px;
      height: 45px;
      flex-direction: row-reverse;
      padding: 0 20px;
      transition-property: top;
    }
    #ribbon.visible {
      top: 0;
    }
    #ribbon span {
      writing-mode: horizontal-tb;
    }
    #ribbon > div,
    #ribbon > span {
      margin: auto 0;
    }
  }
</style>

<style is:global>
  div.header-image {
    height: 48px;
  }

  div.header-image > .brand > a:hover {
    text-decoration: none;
  }

  #menu {
    right: -700px;
    width: 700px;
    box-sizing: border-box;
    z-index: 69;
    transition-property: right;
    transition-duration: 400ms;
  }
  #menu.visible {
    right: 0;
  }

  #menu a {
    color: hsl(0, 0%, 75%);
    font-weight: 400;
    transition-property: color;
    transition-duration: 300ms;
  }
  #menu a:hover {
    text-decoration: none;
    color: hsl(0, 0%, 100%);
  }

  @media (min-width: 768px) and (max-width: 1280px) {
    div.header-image {
      height: 32px;
    }

    #menu {
      width: 550px;
      right: -550px;
    }
  }

  @media (max-width: 767px) {
    div.header-image {
      height: 24px;
    }
    div.header-image > .brand {
      font-size: 16px;
    }

    #menu {
      right: -100vw;
      width: 100vw;
    }
    #menu.visible {
      right: 0;
    }

    #menu > div.center-y-flex {
      width: 100%;
    }

    #menu h2 {
      max-width: 200px;
    }

    #menu-links,
    #menu-links > li,
    #menu-links > li > a {
      width: 100%;
    }

    #menu-links > li > a {
      display: inline-block;
      margin-bottom: 10px;
    }
  }
</style>

<script is:inline>
  const menuImageButton = document.getElementById('menu-image-button')
  const menu = document.getElementById('menu')
  const menuCloseButton = document.getElementById('menu-close-button')
  const ribbon = document.getElementById('ribbon')
  const menuRibbonButton = document.getElementById('menu-ribbon-button')
  const menuLinks = document.getElementById('menu-links')

  document.addEventListener('click', () => {
    menu?.classList.remove('visible')
  })

  menu?.addEventListener('click', e => {
    e.stopPropagation()
  })

  menuImageButton?.addEventListener('click', e => {
    e.stopPropagation()
    menu?.classList.add('visible')
  })

  menuRibbonButton?.addEventListener('click', e => {
    e.stopPropagation()
    menu?.classList.add('visible')
  })

  menuCloseButton?.addEventListener('click', () => {
    menu?.classList.remove('visible')
  })

  menuLinks?.addEventListener('click', () => {
    menu?.classList.remove('visible')
  })

  window.addEventListener('scroll', () => {
    if (window.scrollY >= 100) {
      ribbon?.classList.add('visible')
    } else {
      ribbon?.classList.remove('visible')
    }
  })
</script>
