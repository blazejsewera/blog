---
export interface Props {
  siteName: string
  ribbonTitle: string
}
const { siteName, ribbonTitle } = Astro.props
const baseSite = 'https://www.sewera.dev'
const blogSite = '/'
const github = 'https://github.com/blazejsewera'
---

<div class="header-image flex margin-bottom-header">
  <span class="brand center-y-flex font-bigger">
    <a href={blogSite} title={siteName} class="text-white weight-normal"
      >{siteName}</a
    >
  </span>
  <span
    id="menu-image-button"
    class="flex right-x-flex icon-wrapper cursor-pointer"
  >
    <img src="/menu.svg" alt="menu" />
  </span>
</div>

<div id="ribbon">
  <div id="menu-ribbon-button" class="flex cursor-pointer">
    <img src="/menu.svg" alt="menu" />
  </div>
  <span>{ribbonTitle}</span>
  <div>
    <a class="flex" href={blogSite}
      ><img class="logo" src="/logo-white.svg" alt="home" />
    </a>
  </div>
</div>

<div id="menu" class="text-white flex">
  <span id="menu-close-button" class="flex icon-wrapper cursor-pointer">
    <img src="/close.svg" alt="close" />
  </span>
  <div class="center-y-flex">
    <h2 class="font-biggest my-6">Where do you want to go?</h2>
    <menu id="menu-links" class="non-bullet-ul">
      <li><a href={baseSite}>home</a></li>
      <li><a href={blogSite} title="Blog">blog</a></li>
      <li><a href={`${baseSite}#me`} title="About me">about me</a></li>
      <li><a href={github} title="My Github">code</a></li>
    </menu>
  </div>
</div>

<style is:global>
  div.header-image {
    height: 48px;
  }

  div.header-image > .brand > a:hover {
    text-decoration: none;
  }

  #ribbon {
    position: fixed;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    right: -50px;
    top: 80px;
    box-sizing: border-box;
    width: 50px;
    min-height: 360px;
    padding: 15px 5px;
    background-color: hsl(0, 0%, 20%);
    color: hsl(0, 0%, 100%);
    font-size: 16px;
    z-index: 68;
    transition-property: right;
    transition-duration: 200ms;
  }
  #ribbon.visible {
    right: 0;
  }
  #ribbon #menu-ribbon-button img {
    height: 24px;
    margin: auto;
  }
  #ribbon .logo {
    height: 30px;
    margin: auto;
  }
  #ribbon span {
    writing-mode: vertical-rl;
    text-orientation: mixed;
  }
  #ribbon > div,
  #ribbon > span {
    margin: 0 auto;
  }

  #menu {
    background-color: hsl(0, 0%, 20%);
    position: fixed;
    top: 0;
    right: -700px;
    height: 100vh;
    width: 700px;
    padding: 50px;
    box-sizing: border-box;
    z-index: 69;
    transition-property: right;
    transition-duration: 400ms;
  }
  #menu.visible {
    right: 0;
  }

  #menu menu {
    font-size: 36px;
  }

  #menu a {
    color: hsl(0, 0%, 75%);
    font-weight: 400;
    transition-property: color;
    transition-duration: 300ms;
  }
  #menu a:hover {
    text-decoration: none;
    color: hsl(0, 0%, 100%);
  }

  #menu-close-button {
    position: absolute;
    top: 50px;
    left: 50px;
  }

  @media (min-width: 768px) and (max-width: 1300px) {
    div.header-image {
      height: 32px;
    }

    #menu {
      width: 550px;
      right: -550px;
    }

    #menu menu {
      font-size: 30px;
    }
  }

  /* Small size: usually smartphones */

  @media (max-width: 767px) {
    div.header-image {
      height: 24px;
    }
    div.header-image > .brand {
      font-size: 16px;
    }

    #ribbon {
      top: -45px;
      right: 0;
      width: 100%;
      min-height: 45px;
      height: 45px;
      flex-direction: row-reverse;
      padding: 0 20px;
      transition-property: top;
    }
    #ribbon.visible {
      top: 0;
    }
    #ribbon span {
      writing-mode: horizontal-tb;
    }
    #ribbon > div,
    #ribbon > span {
      margin: auto 0;
    }

    #menu {
      top: 0;
      right: -100vw;
      width: 100vw;
      padding: 40px;
      transition-property: right;
      transition-duration: 400ms;
    }
    #menu.visible {
      right: 0;
    }

    #menu > div.center-y-flex {
      width: 100%;
    }

    #menu menu {
      font-size: 24px;
    }

    #menu h2 {
      max-width: 200px;
    }

    #menu-links,
    #menu-links > li,
    #menu-links > li > a {
      width: 100%;
    }

    #menu-links > li > a {
      display: inline-block;
      margin-bottom: 10px;
    }

    #menu-close-button {
      left: auto;
      top: 40px;
      right: 40px;
    }
  }
</style>

<script is:inline>
  const menuImageButton = document.getElementById('menu-image-button')
  const menu = document.getElementById('menu')
  const menuCloseButton = document.getElementById('menu-close-button')
  const ribbon = document.getElementById('ribbon')
  const menuRibbonButton = document.getElementById('menu-ribbon-button')
  const menuLinks = document.getElementById('menu-links')

  document.addEventListener('click', () => {
    menu?.classList.remove('visible')
  })

  menu?.addEventListener('click', e => {
    e.stopPropagation()
  })

  menuImageButton?.addEventListener('click', e => {
    e.stopPropagation()
    menu?.classList.add('visible')
  })

  menuRibbonButton?.addEventListener('click', e => {
    e.stopPropagation()
    menu?.classList.add('visible')
  })

  menuCloseButton?.addEventListener('click', () => {
    menu?.classList.remove('visible')
  })

  menuLinks?.addEventListener('click', () => {
    menu?.classList.remove('visible')
  })

  window.addEventListener('scroll', () => {
    if (window.scrollY >= 100) {
      ribbon?.classList.add('visible')
    } else {
      ribbon?.classList.remove('visible')
    }
  })
</script>
